{
  "openapi": "3.0.0",
  "info": {
    "version": "1.3.2",
    "title": "CompanyService",
    "description": "CompanyService is an API that intended to work with positions and departments."
  },
  "servers": [
    {
      "url": "https://company.ltdo.xyz"
    }
  ],
  "paths": {
    "/position/getPositionById": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        }
      ],
      "get": {
        "tags": [
          "Position"
        ],
        "operationId": "getPositionById",
        "description": "Returns position by id.",
        "parameters": [
          {
            "name": "positionId",
            "in": "query",
            "description": "Position global unique identifier.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned a position.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.\n* Token was not entered.\n* Invalid token.\n"
          },
          "404": {
            "description": "Not found.\n* Position with this id not found.\n"
          }
        }
      }
    },
    "/position/getPositionsList": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        }
      ],
      "get": {
        "tags": [
          "Position"
        ],
        "operationId": "getPositionsList",
        "description": "Returns all added positions.",
        "responses": {
          "200": {
            "description": "Successfully returned added positions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionResponse"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.\n* Token was not entered.\n* Invalid token.\n   \n"
          }
        }
      }
    },
    "/position/create": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        }
      ],
      "post": {
        "tags": [
          "Position"
        ],
        "operationId": "addPosition",
        "description": "Adds a new position.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPositionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "New position was successfully added.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Position global unique identifier.",
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.\n* Incorrect position data.\n* This position id already exist.\n"
          },
          "403": {
            "description": "Forbidden.\n* Token was not entered.\n* Invalid token.\n"
          }
        }
      }
    },
    "/position/editPosition": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        }
      ],
      "post": {
        "tags": [
          "Position"
        ],
        "operationId": "editPosition",
        "description": "Edits a specified position.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditPositionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok.\n* Position was successfully changed.\n"
          },
          "403": {
            "description": "Forbidden.\n* Token was not entered.\n* Invalid token.\n"
          },
          "404": {
            "description": "Not Found.\n* Position with this id not found.\n"
          }
        }
      }
    },
    "/position/disablePositionById": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        }
      ],
      "delete": {
        "tags": [
          "Position"
        ],
        "operationId": "disablePositionById",
        "description": "Deletes the specified position.",
        "parameters": [
          {
            "name": "positionId",
            "in": "query",
            "description": "Position global unique identifier.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.\n* Position was successfully removed.\n"
          },
          "403": {
            "description": "Forbidden.\n* Token was not entered.\n* Invalid token.\n"
          },
          "404": {
            "description": "Not Found.\n* Position with this id not found.\n"
          }
        }
      }
    },
    "/department/create": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        }
      ],
      "post": {
        "tags": [
          "Department"
        ],
        "operationId": "addDepartment",
        "description": "Adds a new department to company.\n* __The user must have access to the right__ -- Add/Edit/Remove departments.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDepartmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Guid of the added department.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.\n* Incorrect department data.\n* This department id already exist.\n"
          },
          "403": {
            "description": "Forbidden.\n* Token was not entered.\n* Invalid token.\n* Not enough rights.\n"
          }
        }
      }
    },
    "/department/get": {
      "get": {
        "tags": [
          "Department"
        ],
        "operationId": "get",
        "description": "Returns department by id.",
        "parameters": [
          {
            "name": "departmentId",
            "in": "query",
            "description": "Department global unique identifier.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned department.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          },
          "404": {
            "description": "Not found.\n* Department with this id not found.\n"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddPositionRequest": {
        "type": "object",
        "description": "Specific position data.",
        "required": [
          "Name",
          "Description",
          "IsActive"
        ],
        "properties": {
          "Name": {
            "description": "Position name.",
            "type": "string",
            "example": "IT projects consultant"
          },
          "Description": {
            "description": "Position description.",
            "type": "string",
            "example": "Responsibilities include the following. Communication with clients, analysis of client needs, setting a developer's task, control of execution, testing, delivery of the result to the client. Maintaining project documentation, both with the client and internal. Keeping statistics and analysis, searching for customers for integration in the supplier base. Document management (contracts, accounts, acts).",
            "nullable": true
          },
          "IsActive": {
            "description": "Marks whether position is active or not.",
            "type": "boolean"
          }
        }
      },
      "EditPositionRequest": {
        "type": "object",
        "description": "Specific position data.",
        "required": [
          "Id",
          "Name",
          "Description",
          "IsActive"
        ],
        "properties": {
          "Id": {
            "description": "Specific position id.",
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "description": "Position name.",
            "type": "string",
            "example": "IT projects consultant"
          },
          "Description": {
            "description": "Position description.",
            "type": "string",
            "example": "Responsibilities include the following. Communication with clients, analysis of client needs, setting a developer's task, control of execution, testing, delivery of the result to the client. Maintaining project documentation, both with the client and internal. Keeping statistics and analysis, searching for customers for integration in the supplier base. Document management (contracts, accounts, acts).",
            "nullable": true
          },
          "IsActive": {
            "description": "Marks whether position is active or not.",
            "type": "boolean"
          }
        }
      },
      "AddDepartmentRequest": {
        "type": "object",
        "required": [
          "Info",
          "UsersIds"
        ],
        "properties": {
          "Info": {
            "$ref": "#/components/schemas/Department"
          },
          "Users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepartmentUser"
            }
          }
        }
      },
      "PositionResponse": {
        "type": "object",
        "properties": {
          "Info": {
            "$ref": "#/components/schemas/Position"
          },
          "UserIds": {
            "type": "array",
            "description": "List specific users id.",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "Position": {
        "type": "object",
        "description": "Specific position data.",
        "properties": {
          "Id": {
            "description": "Specific position id.",
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "description": "Position name.",
            "type": "string",
            "example": "IT projects consultant"
          },
          "Description": {
            "description": "Position description.",
            "type": "string",
            "example": "Responsibilities include the following. Communication with clients, analysis of client needs, setting a developer's task, control of execution, testing, delivery of the result to the client. Maintaining project documentation, both with the client and internal. Keeping statistics and analysis, searching for customers for integration in the supplier base. Document management (contracts, accounts, acts).",
            "nullable": true
          },
          "IsActive": {
            "description": "Marks whether position is active or not.",
            "type": "boolean"
          }
        }
      },
      "Department": {
        "type": "object",
        "description": "Specific department data.",
        "required": [
          "Name",
          "Description"
        ],
        "properties": {
          "Name": {
            "description": "Department name.",
            "type": "string"
          },
          "Description": {
            "description": "Department description.",
            "type": "string"
          },
          "DirectorUserId": {
            "description": "Specific director user id this department.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "DepartmentUser": {
        "type": "object",
        "description": "User data of specific department.",
        "properties": {
          "UserId": {
            "type": "string",
            "format": "uuid",
            "description": "Specific users id."
          },
          "PositionId": {
            "type": "string",
            "format": "uuid",
            "description": "Specific position id."
          }
        }
      }
    },
    "parameters": {
      "securityToken": {
        "name": "token",
        "in": "header",
        "description": "The JWT token.",
        "schema": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ"
        },
        "required": true
      }
    }
  }
}
