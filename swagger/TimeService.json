{
  "openapi": "3.0.0",
  "info": {
    "version": "1.1.8.2",
    "title": "TimeService",
    "description": "TimeService is an API intended to work with the WorkTime and LeaveTime."
  },
  "servers": [
    {
      "url": "https://time.ltdo.xyz",
      "description": "Production server"
    },
    {
      "url": "https://time.dev.ltdo.xyz",
      "description": "Development server"
    }
  ],
  "paths": {
    "/leavetime/create": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        }
      ],
      "post": {
        "tags": [
          "LeaveTime"
        ],
        "operationId": "createLeaveTime",
        "description": "Sets the leavetime for the user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLeaveTimeRequest"
              }
            }
          },
          "description": "Needed for set leavetime.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "401":{
            "description": "Unauthorized - Token was not entered"
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/leavetime/find": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        },
        {
          "name": "userid",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": false
        },
        {
          "name": "starttime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "pattern": "YYYY-MM-DDTHH:mm",
            "example": "2020-07-18T08:23"
          },
          "required": false
        },
        {
          "name": "endtime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "pattern": "YYYY-MM-DDTHH:mm",
            "example": "2020-07-18T08:23"
          },
          "required": false
        },
        {
          "name": "includedeactivated",
          "in": "query",
          "schema": {
            "type": "boolean",
            "example": true
          },
          "required": false
        },
        {
          "name": "takeCount",
          "in": "query",
          "schema": {
            "type": "integer"
          },
          "required": false
        },
        {
          "name": "skipCount",
          "in": "query",
          "schema": {
            "type": "integer"
          },
          "required": false
        }
      ],
      "get": {
        "tags": [
          "LeaveTime"
        ],
        "operationId": "findLeaveTimes",
        "description": "Find leave times by filter.",
        "responses": {
          "200": {
            "description": "Successfully find leave times.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindResultResponseLeaveTimeResponse"
                }
              }
            }
          },
          "401":{
            "description": "Unauthorized - Token was not entered"
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindResultResponseLeaveTimeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindResultResponseLeaveTimeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/leavetime/edit": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        },
        {
          "name": "leaveTimeId",
          "in": "query",
          "description": "Leave time global unique identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "LeaveTime"
        ],
        "operationId": "editLeaveTime",
        "description": "Editing specific leave time by Id.\n*  __User has edit only himself if his is not admin. \n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditLeaveTimeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "401":{
            "description": "Unauthorized - Token was not entered"
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/worktime/create": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        }
      ],
      "post": {
        "tags": [
          "WorkTime"
        ],
        "operationId": "CreateWorkTime",
        "description": "Create worktime without reference to the project.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkTimeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "401":{
            "description": "Unauthorized - Token was not entered"
          }
        }
      }
    },
    "/worktime/find": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        },
        {
          "name": "userid",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": false
        },
        {
          "name": "projectid",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": false
        },
        {
          "name": "month",
          "in": "query",
          "schema": {
            "type": "integer"
          },
          "required": false
        },
        {
          "name": "year",
          "in": "query",
          "schema": {
            "type": "integer"
          },
          "required": false
        },
        {
          "name": "includedayjobs",
          "in": "query",
          "schema": {
            "type": "boolean"
          },
          "required": false
        },
        {
          "name": "takeCount",
          "in": "query",
          "schema": {
            "type": "integer"
          },
          "required": false
        },
        {
          "name": "skipCount",
          "in": "query",
          "schema": {
            "type": "integer"
          },
          "required": false
        }
      ],
      "get": {
        "tags": [
          "WorkTime"
        ],
        "operationId": "findWorkTimes",
        "description": "Find work times by filter.",
        "responses": {
          "200": {
            "description": "Successfully find work times.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindResultResponseWorkTimeResponse"
                }
              }
            }
          },
          "401":{
            "description": "Unauthorized - Token was not entered"
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/worktime/edit": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        },
        {
          "name": "workTimeId",
          "in": "query",
          "description": "Work time global unique identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "WorkTime"
        ],
        "operationId": "editWorkTime",
        "description": "Editing specific work time by Id.\n*  __User has edit only himself if his is not admin. \n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditWorkTimeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "401":{
            "description": "Unauthorized - Token was not entered"
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/worktimemonthlimit/find": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        },
        {
          "name": "month",
          "in": "query",
          "schema": {
            "type": "integer"
          },
          "required": false
        },
        {
          "name": "year",
          "in": "query",
          "schema": {
            "type": "integer"
          },
          "required": false
        },
        {
          "name": "takeCount",
          "in": "query",
          "schema": {
            "type": "integer"
          },
          "required": false
        },
        {
          "name": "skipCount",
          "in": "query",
          "schema": {
            "type": "integer"
          },
          "required": false
        }
      ],
      "get": {
        "tags": [
          "WorkTimeMonthLimit"
        ],
        "operationId": "findWorkTimeMonthLimits",
        "description": "Find work time month limits by filter.",
        "responses": {
          "200": {
            "description": "Successfully find work times.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindResultResponseWorkTimeMonthLimitInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindResultResponseWorkTimeMonthLimitInfo"
                }
              }
            }
          },
          "401":{
            "description": "Unauthorized - Token was not entered"
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindResultResponseWorkTimeMonthLimitInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindResultResponseWorkTimeMonthLimitInfo"
                }
              }
            }
          }
        }
      }
    },
    "/worktimemonthlimit/edit": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        },
        {
          "name": "workTimeMonthLimitId",
          "in": "query",
          "description": "Work time global unique identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "WorkTime"
        ],
        "operationId": "editWorkTimeMonthLimit",
        "description": "Editing specific work time month limit by Id.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditWorkTimeMonthLimitRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "401":{
            "description": "Unauthorized - Token was not entered"
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/worktimedayjob/create": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        }
      ],
      "post": {
        "tags": [
          "WorkTimeDayJob"
        ],
        "operationId": "CreateWorkTimeDayJob",
        "description": "Create the day job for the worktime.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkTimeDayJobRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "401":{
            "description": "Unauthorized - Token was not entered"
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/worktimedayjob/edit": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        },
        {
          "name": "workTimeDayJobId",
          "in": "query",
          "description": "Leave time global unique identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "WorkTimeDayJobId"
        ],
        "operationId": "editWorkTimeDayJob",
        "description": "Editing specific day job by Id.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditWorkTimeDayJobRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "401":{
            "description": "Unauthorized - Token was not entered"
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/import/get": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        },
        {
          "name": "departmentId",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": false
        },
        {
          "name": "projectId",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": false
        },
        {
          "name": "month",
          "in": "query",
          "schema": {
            "type": "integer"
          },
          "required": true
        },
        {
          "name": "year",
          "in": "query",
          "schema": {
            "type": "integer"
          },
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Import"
        ],
        "operationId": "getImport",
        "description": "Import stat.",
        "responses": {
          "200": {
            "description": "Successfully get imported stat.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponseByteArray"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponseByteArray"
                }
              }
            }
          },
          "401":{
            "description": "Unauthorized - Token was not entered"
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponseByteArray"
                }
              }
            }
          }
        }
      }
    },
    "/stat/find": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        },
        {
          "name": "departmentsIds",
          "in": "query",
          "schema": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "required": false
        },
        {
          "name": "projectId",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": false
        },
        {
          "name": "ascendingsort",
          "in": "query",
          "description": "When value is 'true' sorts A-Z, when value is 'false' sorts Z-A, when null - without sort",
          "schema": {
            "type": "boolean"
          },
          "required": false
        },
        {
          "name": "nameincludesubstring",
          "in": "query",
          "description": "filter by user's name",
          "schema": {
            "type": "string"
          },
          "required": false
        },
        {
          "name": "month",
          "in": "query",
          "schema": {
            "type": "integer"
          },
          "required": true
        },
        {
          "name": "year",
          "in": "query",
          "schema": {
            "type": "integer"
          },
          "required": true
        },
        {
          "name": "takeCount",
          "in": "query",
          "schema": {
            "type": "integer"
          },
          "required": true
        },
        {
          "name": "skipCount",
          "in": "query",
          "schema": {
            "type": "integer"
          },
          "required": true
        }
      ],
      "get": {
        "tags": [
          "stat"
        ],
        "operationId": "findStat",
        "description": "Find stat by filter.",
        "responses": {
          "200": {
            "description": "Successfully find stat.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindResultResponseUserStatInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindResultResponseUserStatInfo"
                }
              }
            }
          },
          "401":{
            "description": "Unauthorized - Token was not entered"
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindResultResponseUserStatInfo"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateLeaveTimeRequest": {
        "type": "object",
        "required": [
          "UserId",
          "Minutes",
          "StartTime",
          "LeaveType"
        ],
        "properties": {
          "UserId": {
            "description": "User working on the current project.",
            "type": "string",
            "format": "uuid",
            "example": "05d525f7-27d2-4549-be07-ed63d96d287f"
          },
          "Minutes": {
            "type": "integer"
          },
          "StartTime": {
            "description": "Start time leave from task with timezone offset.",
            "type": "string",
            "format": "date-time",
            "pattern": "YYYY-MM-DDTHH:mm:ssZ",
            "example": "2021-06-23T09:07:21-07:00"
          },
          "EndTime": {
            "description": "End time leave from task with timezone offset.",
            "type": "string",
            "format": "date-time",
            "pattern": "YYYY-MM-DDTHH:mm:ssZ",
            "example": "2021-06-23T09:07:21+07:00"
          },
          "LeaveType": {
            "$ref": "#/components/schemas/LeaveType"
          },
          "Comment": {
            "description": "Description for alloted time. Required if leaveType is Prolonged",
            "type": "string"
          }
        }
      },
      "EditLeaveTimeRequest": {
        "type": "array",
        "minItems": 1,
        "example": [
          {
            "op": "replace",
            "path": "/Minutes",
            "value": {
              "type": "integer"
            }
          },
          {
            "op": "replace",
            "path": "/StartTime",
            "value": {
              "description": "New start time leave from task including timezone offset.",
              "type": "string",
              "format": "date-time",
              "pattern": "YYYY-MM-DDTHH:mm:ssZ",
              "example": "2021-06-23T09:07:21-07:00"
            }
          }
        ],
        "items": {
          "$ref": "#/components/schemas/PatchLeaveTimeDocument"
        }
      },
      "PatchLeaveTimeDocument": {
        "type": "object",
        "required": [
          "op",
          "path"
        ],
        "properties": {
          "op": {
            "type": "string",
            "description": "The operation to be performed.",
            "enum": [
              "replace"
            ]
          },
          "path": {
            "type": "string",
            "description": "A JSON-Pointer.",
            "enum": [
              "/Minutes",
              "/StartTime",
              "/EndTime",
              "/LeaveType",
              "/Comment",
              "/IsClosed",
              "/IsActive"
            ]
          },
          "value": {
            "type": "object",
            "description": "The value to be used within the operations."
          }
        }
      },
      "CreateWorkTimeRequest": {
        "type": "object",
        "required": [
          "Year",
          "Month",
          "Offset",
          "Description"
        ],
        "properties": {
          "Hours": {
            "type": "number",
            "example": "10.5"
          },
          "Description": {
            "type": "string"
          },
          "Year": {
            "type": "integer",
            "example":"2021"
          },
          "Month": {
            "type": "integer",
            "example":"12"
          },
          "Offset": {
            "description": "User's timezone offset. Must be in [-12,12] interval.",
            "type": "integer",
            "example":"-12"
          }
        }
      },
      "CreateWorkTimeDayJobRequest": {
        "type": "object",
        "required": [
          "WorkTimeId",
          "Day",
          "Name",
          "Minutes"
        ],
        "properties": {
          "WorkTimeId": {
            "type": "string",
            "format": "uuid",
            "example": "05d525f7-27d2-4549-be07-ed63d96d287f"
          },
          "Day": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Minutes": {
            "type": "integer"
          }
        }
      },
      "EditWorkTimeDayJobRequest": {
        "type": "array",
        "minItems": 1,
        "example": [
          {
            "op": "replace",
            "path": "/Minutes",
            "value": {
              "type": "integer"
            }
          }
        ],
        "items": {
          "$ref": "#/components/schemas/PatchWorkTimeDayJobDocument"
        }
      },
      "PatchWorkTimeDayJobDocument": {
        "type": "object",
        "required": [
          "op",
          "path"
        ],
        "properties": {
          "op": {
            "type": "string",
            "description": "The operation to be performed.",
            "enum": [
              "replace"
            ]
          },
          "path": {
            "type": "string",
            "description": "A JSON-Pointer.",
            "enum": [
              "/WorkTimeId",
              "/Day",
              "/Name",
              "/Description",
              "/Minutes",
              "/IsActive"
            ]
          },
          "value": {
            "type": "object",
            "description": "The value to be used within the operations."
          }
        }
      },
      "PositionInfo": {
        "type": "object",
        "required": [
          "Id",
          "Name"
        ],
        "properties": {
          "Id": {
            "type": "string",
            "format": "guid"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "CompanyUserInfo": {
        "type": "object",
        "required": [
          "StartWorkingAt"
        ],
        "properties": {
          "Rate": {
            "type": "number"
          },
          "StartWorkingAt": {
            "description": "Start user's working date.",
            "type": "string",
            "format": "date-time",
            "pattern": "YYYY-MM-DDTHH:mm",
            "example": "2020-07-18T08:23"
          },
          "ContractSubject": {
            "$ref": "#/components/schemas/ContractSubjectData"
          }
        }
      },
      "ContractSubjectData": {
        "type": "object",
        "required": [
          "Id",
          "Name"
        ],
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "EditWorkTimeRequest": {
        "type": "array",
        "minItems": 1,
        "example": [
          {
            "op": "replace",
            "path": "/ProjectId",
            "value": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "items": {
          "$ref": "#/components/schemas/PatchWorkTimeDocument"
        }
      },
      "PatchWorkTimeDocument": {
        "type": "object",
        "required": [
          "op",
          "path"
        ],
        "properties": {
          "op": {
            "type": "string",
            "description": "The operation to be performed.",
            "enum": [
              "replace"
            ]
          },
          "path": {
            "type": "string",
            "description": "A JSON-Pointer.",
            "enum": [
              "/Hours",
              "/Description"
            ]
          },
          "value": {
            "type": "object",
            "description": "The value to be used within the operations."
          }
        }
      },
      "EditWorkTimeMonthLimitRequest": {
        "type": "array",
        "minItems": 1,
        "example": [
          {
            "op": "replace",
            "path": "/ProjectId",
            "value": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "items": {
          "$ref": "#/components/schemas/PatchWorkTimeMonthLimitDocument"
        }
      },
      "PatchWorkTimeMonthLimitDocument": {
        "type": "object",
        "required": [
          "op",
          "path"
        ],
        "properties": {
          "op": {
            "type": "string",
            "description": "The operation to be performed.",
            "enum": [
              "replace"
            ]
          },
          "path": {
            "type": "string",
            "description": "A JSON-Pointer.",
            "enum": [
              "/NormHours",
              "/Holidays"
            ]
          },
          "value": {
            "type": "object",
            "description": "The value to be used within the operations."
          }
        }
      },
      "WorkTimeInfo": {
        "type": "object",
        "required": [
          "Id",
          "Month",
          "Year"
        ],
        "properties": {
          "Id": {
            "description": "The work time Id.",
            "type": "string",
            "format": "uuid",
            "example": "80d13a19-872e-45bc-b1ed-a01d6fac3c0f"
          },
          "Project": {
            "$ref": "#/components/schemas/ProjectInfo"
          },
          "Day": {
            "type": "integer"
          },
          "Month": {
            "type": "integer"
          },
          "Year": {
            "type": "integer"
          },
          "UserHours": {
            "type": "number"
          },
          "ManagerHours": {
            "type": "number"
          },
          "Description": {
            "description": "Description for alloted time.",
            "type": "string"
          },
          "ManagerDescription": {
            "description": "Description for alloted time.",
            "type": "string"
          },
          "ModifiedAtUtc": {
            "type": "string",
            "format": "date-time",
            "pattern": "YYYY-MM-DDTHH:mm",
            "example": "2020-07-18T08:23"
          },
          "Jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTimeJobInfoInfo"
            }
          },
          "Manager": {
            "$ref": "#/components/schemas/UserInfo"
          }
        }
      },
      "WorkTimeJobInfoInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "description": "The work time day job Id.",
            "type": "string",
            "format": "uuid",
            "example": "80d13a19-872e-45bc-b1ed-a01d6fac3c0f"
          },
          "WorkTimeId": {
            "description": "The work time Id.",
            "type": "string",
            "format": "uuid",
            "example": "80d13a19-872e-45bc-b1ed-a01d6fac3c0f"
          },
          "Day": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Minutes": {
            "type": "integer"
          },
          "IsActive": {
            "type": "boolean"
          }
        }
      },
      "WorkTimeMonthLimitInfo": {
        "type": "object",
        "required": [
          "Id",
          "Month",
          "Year",
          "Holidays",
          "NormHours"
        ],
        "properties": {
          "Id": {
            "description": "The work time Id.",
            "type": "string",
            "format": "uuid",
            "example": "80d13a19-872e-45bc-b1ed-a01d6fac3c0f"
          },
          "Month": {
            "type": "integer"
          },
          "Year": {
            "type": "integer"
          },
          "Holidays": {
            "description": "1 - holiday, 0 - working day.",
            "type": "string"
          },
          "NormHours": {
            "type": "number"
          }
        }
      },
      "LeaveTimeInfo": {
        "type": "object",
        "required": [
          "Id",
          "Minutes",
          "StartTime",
          "EndTime",
          "LeaveType",
          "CreatedBy",
          "CreatedAtUtc",
          "IsClosed",
          "IsActive"
        ],
        "properties": {
          "Id": {
            "description": "The leave time Id.",
            "type": "string",
            "format": "uuid",
            "example": "80d13a19-872e-45bc-b1ed-a01d6fac3c0f"
          },
          "Minutes": {
            "type": "integer"
          },
          "StartTime": {
            "description": "Start date task execution.",
            "type": "string",
            "format": "date-time",
            "pattern": "YYYY-MM-DDTHH:mm",
            "example": "2020-07-18T08:23"
          },
          "EndTime": {
            "description": "Task finish deadline.",
            "type": "string",
            "format": "date-time",
            "pattern": "YYYY-MM-DDTHH:mm",
            "example": "2021-06-18T08:23"
          },
          "CreatedBy": {
            "type": "string",
            "format": "uuid",
            "example": "80d13a19-872e-45bc-b1ed-a01d6fac3c0f"
          },
          "CreatedAtUtc": {
            "type": "string",
            "format": "date-time",
            "pattern": "YYYY-MM-DDTHH:mm",
            "example": "2021-06-18T08:23"
          },
          "LeaveType": {
            "$ref": "#/components/schemas/LeaveType"
          },
          "Comment": {
            "description": "Description for alloted time.",
            "type": "string"
          },
          "IsClosed": {
            "type": "boolean"
          },
          "IsActive": {
            "type": "boolean"
          },
          "ManagerLeaveTime": {
            "$ref": "#/components/schemas/ManagerLeaveTimeInfo"
          },
          "ManagerInfo": {
            "$ref": "#/components/schemas/UserInfo"
          }
        }
      },
      "ManagerLeaveTimeInfo": {
        "type": "object",
        "required": [
          "Minutes",
          "StartTime",
          "EndTime",
          "LeaveType",
          "CreatedAtUtc",
          "IsClosed",
          "IsActive"
        ],
        "properties": {
          "Minutes": {
            "type": "integer"
          },
          "StartTime": {
            "description": "Start date task execution.",
            "type": "string",
            "format": "date-time",
            "pattern": "YYYY-MM-DDTHH:mm",
            "example": "2020-07-18T08:23"
          },
          "EndTime": {
            "description": "Task finish deadline.",
            "type": "string",
            "format": "date-time",
            "pattern": "YYYY-MM-DDTHH:mm",
            "example": "2021-06-18T08:23"
          },
          "CreatedAtUtc": {
            "type": "string",
            "format": "date-time",
            "pattern": "YYYY-MM-DDTHH:mm",
            "example": "2021-06-18T08:23"
          },
          "LeaveType": {
            "$ref": "#/components/schemas/LeaveType"
          },
          "Comment": {
            "description": "Description for alloted time.",
            "type": "string"
          },
          "IsClosed": {
            "type": "boolean"
          },
          "IsActive": {
            "type": "boolean"
          }
        }
      },
      "LeaveType": {
        "description": "The reason for which lost time.",
        "type": "string",
        "enum": [
          "Vacation",
          "SickLeave",
          "Training",
          "Idle",
          "Prolonged"
        ],
        "example": "Vacation"
      },
      "ProjectInfo": {
        "type": "object",
        "required": [
          "Id"
        ],
        "properties": {
          "Id": {
            "description": "Unique project identifier.",
            "type": "string",
            "format": "uuid",
            "example": "80d13a19-872e-45bc-b1ed-a01d6fac3c0f"
          },
          "Name": {
            "description": "Project name.",
            "type": "string",
            "example": "Digital Office",
            "nullable": false
          },
          "ShortName": {
            "description": "Project short name.",
            "type": "string",
            "example": "DO",
            "nullable": true
          },
          "Status": {
            "$ref": "#/components/schemas/ProjectStatusType",
            "nullable": false
          },
          "ShortDescription": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserInfo": {
        "type": "object",
        "description": "User data.",
        "required": [
          "Id",
          "FirstName",
          "LastName",
          "IsActive"
        ],
        "properties": {
          "Id": {
            "type": "string",
            "format": "guid"
          },
          "FirstName": {
            "type": "string",
            "example": "Spartak"
          },
          "LastName": {
            "type": "string",
            "example": "Ryabtsev"
          },
          "MiddleName": {
            "type": "string",
            "example": "Alexandrovich"
          },
          "IsActive": {
            "type": "boolean"
          },
          "ImageId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "DepartmentInfo": {
        "type": "object",
        "description": "Department data.",
        "required": [
          "Id",
          "Name"
        ],
        "properties": {
          "Id": {
            "type": "string",
            "format": "guid"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "UserStatInfo": {
        "type": "object",
        "required": [
          "User",
          "WorkTimes",
          "LeaveTimes"
        ],
        "properties": {
          "User": {
            "$ref": "#/components/schemas/UserInfo"
          },
          "Position": {
            "$ref": "#/components/schemas/PositionInfo"
          },
          "CompanyUser": {
            "$ref": "#/components/schemas/CompanyUserInfo"
          },
          "Department": {
            "$ref": "#/components/schemas/DepartmentInfo"
          },
          "LeaveTimes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeaveTimeInfo"
            }
          },
          "WorkTimes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTimeInfo"
            }
          },
          "LimitInfo": {
            "$ref": "#/components/schemas/WorkTimeMonthLimitInfo"
          }
        }
      },
      "WorkTimeResponse": {
        "type": "object",
        "required": [
          "WorkTime",
          "LimitInfo"
        ],
        "properties": {
          "WorkTime": {
            "$ref": "#/components/schemas/WorkTimeInfo"
          },
          "User": {
            "$ref": "#/components/schemas/UserInfo"
          },
          "LimitInfo": {
            "$ref": "#/components/schemas/WorkTimeMonthLimitInfo"
          }
        }
      },
      "LeaveTimeResponse": {
        "type": "object",
        "required": [
          "LeaveTime"
        ],
        "properties": {
          "LeaveTime": {
            "$ref": "#/components/schemas/LeaveTimeInfo"
          },
          "User": {
            "$ref": "#/components/schemas/UserInfo"
          }
        }
      },
      "ProjectStatusType": {
        "type": "string",
        "description": "Project status.\nMay be empty, default value: 'Active'.\n,Enum numbers description\n* 0 - Active,\n* 1 - Failed,\n* 2 - Abandoned,\n* 3 - Rejected,\n* 4 - Closed,\n* 5 - Suspend",
        "enum": [
          "Active",
          "Closed",
          "Suspend"
        ],
        "nullable": false,
        "example": "Suspend"
      },
      "FindResultResponseWorkTimeResponse": {
        "type": "object",
        "required": [
          "TotalCount",
          "Errors"
        ],
        "properties": {
          "TotalCount": {
            "type": "integer",
            "description": "Total number of finded by filter work times."
          },
          "Body": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTimeResponse"
            }
          },
          "Errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FindResultResponseWorkTimeMonthLimitInfo": {
        "type": "object",
        "required": [
          "TotalCount",
          "Errors"
        ],
        "properties": {
          "TotalCount": {
            "type": "integer",
            "description": "Total number of finded by filter work times."
          },
          "Body": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkTimeMonthLimitInfo"
            }
          },
          "Errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FindResultResponseLeaveTimeResponse": {
        "type": "object",
        "required": [
          "TotalCount",
          "Errors"
        ],
        "properties": {
          "TotalCount": {
            "type": "integer",
            "description": "Total number of finded by filter leave times."
          },
          "Body": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeaveTimeResponse"
            }
          },
          "Errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FindResultResponseUserStatInfo": {
        "type": "object",
        "required": [
          "TotalCount",
          "Errors"
        ],
        "properties": {
          "TotalCount": {
            "type": "integer",
            "description": "Total number of finded users by filter."
          },
          "Body": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserStatInfo"
            }
          },
          "Errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OperationResultResponse": {
        "description": "Response object for action operations.",
        "type": "object",
        "required": [
          "Errors"
        ],
        "properties": {
          "Body": {
            "type": "object"
          },
          "Errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OperationResultResponseByteArray": {
        "description": "Response object for action operations.",
        "type": "object",
        "required": [
          "Errors"
        ],
        "properties": {
          "Body": {
            "type": "string",
            "format": "byte"
          },
          "Errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "parameters": {
      "securityToken": {
        "name": "token",
        "in": "header",
        "description": "The JWT token.",
        "schema": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ"
        },
        "required": true
      }
    }
  }
}
