{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.1.4",
    "title": "PositionService",
    "description": "PositionService is an API that intended to work with positions."
  },
  "servers": [
    {
      "url": "https://position.ltdo.xyz",
      "description": "Production server"
    },
    {
      "url": "https://position.dev.ltdo.xyz",
      "description": "Development server"
    }
  ],
  "paths": {
    "/position/get": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        }
      ],
      "get": {
        "tags": [
          "Position"
        ],
        "operationId": "getPosition",
        "description": "Returns position by id.",
        "parameters": [
          {
            "name": "positionId",
            "in": "query",
            "description": "Position global unique identifier.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned a position.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponsePositionInfo"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/position/find": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        },
        {
          "name": "skipcount",
          "in": "query",
          "description": "Number of positions to skip.",
          "schema": {
            "type": "integer"
          },
          "required": true
        },
        {
          "name": "takecount",
          "in": "query",
          "description": "Number of positions to take.",
          "schema": {
            "type": "integer"
          },
          "required": true
        },
        {
          "name": "isascendingsort",
          "in": "query",
          "description": "If true returns sorted positions from A to Z, false - sorted from Z to A, null - no sorting.",
          "schema": {
            "type": "boolean"
          },
          "required": false
        },
        {
          "name": "includeDeactivated",
          "in": "query",
          "description": "If true returns both active and disactivated positions, false - only active",
          "schema": {
            "type": "boolean",
            "default": false
          },
          "required": true
        },
        {
          "name": "nameincludesubstring",
          "in": "query",
          "description": "Returns positions whose names contain a substring.",
          "schema": {
            "type": "string"
          },
          "required": false
        }
      ],
      "get": {
        "tags": [
          "Position"
        ],
        "operationId": "findPositions",
        "description": "Returns all added positions.",
        "responses": {
          "200": {
            "description": "Successfully returned added positions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindResultPositionInfo"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/position/create": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        }
      ],
      "post": {
        "tags": [
          "Position"
        ],
        "operationId": "createPosition",
        "description": "Adds a new position.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePositionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Guid of the created position will be in response Body property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/position/edit": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        },
        {
          "name": "positionId",
          "in": "query",
          "description": "Specific position id",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "Position"
        ],
        "operationId": "editPosition",
        "description": "Edits a specified position.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditPositionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok.\n* Update position operation success (boolean) status will be in response Body property.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/edit": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        }
      ],
      "put": {
        "tags": [
          "PositionUser"
        ],
        "operationId": "editPositionUser",
        "description": "Chage user position.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePositionUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success of operation will be in response Body property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreatePositionRequest": {
        "type": "object",
        "description": "Specific position data.",
        "required": [
          "Name"
        ],
        "properties": {
          "Name": {
            "description": "Position name.",
            "type": "string",
            "example": "IT projects consultant"
          },
          "Description": {
            "description": "Position description.",
            "type": "string",
            "example": "Responsibilities include the following. Communication with clients, analysis of client needs, setting a developer's task, control of execution, testing, delivery of the result to the client. Maintaining project documentation, both with the client and internal. Keeping statistics and analysis, searching for customers for integration in the supplier base. Document management (contracts, accounts, acts)."
          }
        }
      },
      "EditPositionRequest": {
        "type": "array",
        "minItems": 1,
        "example": [
          {
            "op": "replace",
            "path": "/name",
            "value": {
              "description": "New position name",
              "type": "string",
              "example": "portal"
            }
          }
        ],
        "items": {
          "$ref": "#/components/schemas/PatchPositionDocument"
        }
      },
      "CreatePositionUserRequest": {
        "type": "object",
        "required": [
          "UserId"
        ],
        "properties": {
          "UserId": {
            "type": "string",
            "format": "uuid"
          },
          "PositionId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "PatchPositionDocument": {
        "type": "object",
        "required": [
          "op",
          "path",
          "value"
        ],
        "properties": {
          "op": {
            "type": "string",
            "description": "The operation to be performed.",
            "enum": [
              "replace"
            ]
          },
          "path": {
            "type": "string",
            "description": "A JSON-Pointer.",
            "enum": [
              "/name",
              "/description",
              "/isactive"
            ]
          },
          "value": {
            "type": "object",
            "description": "The value to be used within the operations."
          }
        }
      },
      "PositionInfo": {
        "type": "object",
        "required": [
          "Id",
          "Name",
          "IsActive"
        ],
        "properties": {
          "Id": {
            "description": "Specific position id.",
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "description": "Position name.",
            "type": "string",
            "example": "IT projects consultant"
          },
          "Description": {
            "description": "Position description.",
            "type": "string",
            "example": "Responsibilities include the following. Communication with clients, analysis of client needs, setting a developer's task, control of execution, testing, delivery of the result to the client. Maintaining project documentation, both with the client and internal. Keeping statistics and analysis, searching for customers for integration in the supplier base. Document management (contracts, accounts, acts)."
          },
          "IsActive": {
            "description": "Marks whether position is active or not.",
            "type": "boolean"
          }
        }
      },
      "ErrorResponse": {
        "description": "Error information",
        "type": "object",
        "properties": {
          "UtcTime": {
            "type": "string"
          },
          "Header": {
            "type": "string"
          },
          "Message": {
            "description": "A human readable message providing more details about the error.",
            "type": "string"
          }
        }
      },
      "OperationResultResponse": {
        "description": "Response object for action operations.",
        "type": "object",
        "required": [
          "Errors"
        ],
        "properties": {
          "Body": {
            "type": "object"
          },
          "Errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OperationResultResponsePositionInfo": {
        "type": "object",
        "required": [
          "Errors"
        ],
        "properties": {
          "Body": {
            "$ref": "#/components/schemas/PositionInfo"
          },
          "Errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FindResultResponsePositionInfo": {
        "type": "object",
        "required": [
          "TotalCount",
          "Errors"
        ],
        "properties": {
          "TotalCount": {
            "type": "integer"
          },
          "Body": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionInfo"
            }
          },
          "Errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FindResultPositionInfo": {
        "type": "object",
        "required": [
          "TotalCount"
        ],
        "properties": {
          "TotalCount": {
            "type": "integer"
          },
          "Body": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionInfo"
            }
          }
        }
      }
    },
    "parameters": {
      "securityToken": {
        "name": "token",
        "in": "header",
        "description": "The JWT token.",
        "schema": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ"
        },
        "required": true
      }
    }
  }
}
