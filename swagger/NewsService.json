{
  "openapi": "3.0.0",
  "info": {
    "version": "1.2.5",
    "title": "NewsService",
    "description": "NewsService, is intended to work with the news - create them, update info and etc."
  },
  "servers": [
    {
      "url": "https://news.ltdo.xyz"
    }
  ],
  "paths": {
    "/news/create": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        }
      ],
      "post": {
        "tags": [
          "News"
        ],
        "operationId": "createNews",
        "description": "Adds news and returns its Id.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "New news Id, Satus and Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/news/edit": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        },
        {
          "name": "newsId",
          "in": "query",
          "description": "Specific news id",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "News"
        ],
        "operationId": "editNews",
        "description": "Updates news fields.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "minItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PatchOperation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update news operation success (boolean) status.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/news/getNewsById": {
      "parameters": [
        {
          "$ref": "#/components/parameters/newsId"
        },
        {
          "$ref": "#/components/parameters/securityToken"
        }
      ],
      "get": {
        "tags": [
          "News"
        ],
        "operationId": "getNewsById",
        "responses": {
          "200": {
            "description": "Successfully returned news information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.\n* Token was not entered.\n* Invalid token.\n"
          },
          "404": {
            "description": "Not Found.\n* News with this id not found.\n"
          }
        }
      }
    },
    "/news/find": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        },
        {
          "name": "authorId",
          "in": "query",
          "description": "Author global unique identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": false
        },
        {
          "name": "departmentId",
          "in": "query",
          "description": "Department global unique identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": false
        },
        {
          "name": "Pseudonym",
          "in": "query",
          "description": "Pseudonym of news author.",
          "schema": {
            "type": "string"
          },
          "required": false
        },
        {
          "name": "subject",
          "in": "query",
          "description": "Subject of news.",
          "schema": {
            "type": "string"
          },
          "required": false
        }
      ],
      "get": {
        "tags": [
          "News"
        ],
        "operationId": "findnews",
        "description": "Returns all news information by filter.",
        "responses": {
          "200": {
            "description": "Successfully returned list of news.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NewsResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "NewsRequest": {
        "type": "object",
        "required": [
          "AuthorId",
          "SenderId",
          "Subject",
          "Content"
        ],
        "properties": {
          "Content": {
            "description": "The news' content.",
            "type": "string"
          },
          "Subject": {
            "description": "The news' subject.",
            "type": "string"
          },
          "Pseudonym": {
            "description": "The news' author name.",
            "type": "string"
          },
          "AuthorId": {
            "description": "Id of the news author.",
            "type": "string",
            "format": "uuid"
          },
          "SenderId": {
            "description": "Id of the news sender.",
            "type": "string",
            "format": "uuid"
          },
          "DepartmentId": {
            "description": "Id of department the news sender.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "PatchOperation": {
        "type": "object",
        "required": [
          "op",
          "path",
          "value"
        ],
        "properties": {
          "op": {
            "type": "string",
            "description": "The operation to be performed.",
            "enum": [
              "replace"
            ]
          },
          "path": {
            "type": "string",
            "description": "A JSON-Pointer.",
            "enum": [
              "/Content",
              "/Subject",
              "/IsActive"
            ]
          },
          "value": {
            "type": "object",
            "description": "The value to be used within the operations."
          }
        }
      },
      "NewsResponse": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "Content": {
            "type": "string"
          },
          "Subject": {
            "type": "string"
          },
          "Author": {
            "$ref": "#/components/schemas/User"
          },
          "Sender": {
            "$ref": "#/components/schemas/User"
          },
          "CreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "Department": {
            "$ref": "#/components/schemas/Department",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "FullName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Department": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ErrorResponse": {
        "description": "Error information",
        "type": "object",
        "properties": {
          "UtcTime": {
            "type": "string"
          },
          "Header": {
            "type": "string"
          },
          "Message": {
            "description": "A human readable message providing more details about the error.",
            "type": "string"
          }
        }
      },
      "OperationResultResponse": {
        "description": "Response object for action operations.",
        "type": "object",
        "properties": {
          "Body": {
            "type": "object"
          },
          "Status": {
            "$ref": "#/components/schemas/OperationResultStatusType"
          },
          "Errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OperationResultStatusType": {
        "type": "string",
        "description": "Operation complition result status.",
        "enum": [
          "FullSuccess",
          "PartialSuccess",
          "Failed",
          "Conflict"
        ],
        "example": "FullSuccess",
        "default": "FullSuccess"
      }
    },
    "parameters": {
      "newsId": {
        "name": "newsId",
        "in": "query",
        "description": "News global unique identifier.",
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "required": true
      },
      "securityToken": {
        "name": "token",
        "in": "header",
        "description": "The JWT token.",
        "schema": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ"
        },
        "required": true
      }
    }
  }
}
