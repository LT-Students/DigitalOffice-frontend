{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0.0",
    "title": "DepartmentService",
    "description": "DepartmentService, is intended to work with the department."
  },
  "servers": [
    {
      "url": "https://department.ltdo.xyz",
      "description": "Production server"
    },
    {
      "url": "https://department.dev.ltdo.xyz",
      "description": "Development server"
    }
  ],
  "paths": {
    "/department/create": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        }
      ],
      "post": {
        "tags": [
          "Department"
        ],
        "operationId": "createDepartment",
        "description": "Create a new department.\n* __The user must have access to the right__ -- Add/Edit/Remove departments.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDepartmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Guid of the created department will be in response Body property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.\n* Incorrect department data.\n* This department id already exist.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.\n* Token was not entered.\n* Invalid token.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict.\n* Department with this name already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/department/get": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        }
      ],
      "get": {
        "tags": [
          "Department"
        ],
        "operationId": "getDepartment",
        "description": "Returns department by id.",
        "parameters": [
          {
            "name": "departmentid",
            "in": "query",
            "description": "Department global unique identifier.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "includeusers",
            "in": "query",
            "description": "Response would include department users.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "includeprojects",
            "in": "query",
            "description": "Response would include department projects.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned department.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponseDepartmentInfo"
                }
              }
            }
          }
        }
      }
    },
    "/department/find": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        },
        {
          "name": "skipCount",
          "in": "query",
          "description": "Number of deparments to skip.",
          "schema": {
            "type": "integer"
          },
          "required": true
        },
        {
          "name": "takeCount",
          "in": "query",
          "description": "Number of departments to take.",
          "schema": {
            "type": "integer"
          },
          "required": true
        },
        {
          "name": "includeDeactivated",
          "in": "query",
          "description": "If it is true, response will be have deactivated records.",
          "schema": {
            "type": "boolean"
          },
          "required": false
        }
      ],
      "get": {
        "tags": [
          "Department"
        ],
        "operationId": "findDepartments",
        "description": "Returns finded departments.",
        "responses": {
          "200": {
            "description": "Successfully returned departments.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindResultResponseDepartmentInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/department/edit": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        },
        {
          "name": "departmentId",
          "in": "query",
          "description": "Specific position id",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "Department"
        ],
        "operationId": "editDepartment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditDepartmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok.\n* Update department operation success (boolean) status will be in response Body property.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/create": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        }
      ],
      "post": {
        "tags": [
          "Department"
        ],
        "operationId": "addDepartmentUsers",
        "description": "Adds a new users to department.\n* __The user must have access to the right__ -- Add/Edit/Remove departments.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDepartmentUsersRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/remove": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        },
        {
          "name": "departmentid",
          "in": "query",
          "description": "Department global unique identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": true
        }
      ],
      "delete": {
        "tags": [
          "Department"
        ],
        "operationId": "removeUsers",
        "description": "Remove users from Department.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "description": "Specific user identifier.",
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully removed users from department.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "NotFound.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DepartmentInfo": {
        "type": "object",
        "description": "Specific department data.",
        "properties": {
          "Id": {
            "description": "Department id.",
            "type": "string",
            "format": "guid"
          },
          "Name": {
            "description": "Department name.",
            "type": "string"
          },
          "Description": {
            "description": "Department description.",
            "type": "string",
            "nullable": true
          },
          "Director": {
            "$ref": "#/components/schemas/UserInfo",
            "nullable": true
          },
          "CountUsers": {
            "type": "integer"
          }
        }
      },
      "DepartmentUserInfo": {
        "type": "object",
        "description": "User data of specific department.",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "MiddleName": {
            "type": "string",
            "nullable": true
          },
          "Rate": {
            "type": "number",
            "format": "float"
          },
          "IsActive": {
            "type": "boolean",
            "example": true
          },
          "Image": {
            "type": "object",
            "$ref": "#/components/schemas/ImageInfo",
            "nullable": true
          },
          "Position": {
            "type": "object",
            "$ref": "#/components/schemas/PositionInfo"
          }
        }
      },
      "UserInfo": {
        "type": "object",
        "description": "User data.",
        "properties": {
          "Id": {
            "type": "string",
            "format": "guid"
          },
          "FirstName": {
            "type": "string",
            "example": "Spartak"
          },
          "LastName": {
            "type": "string",
            "example": "Ryabtsev"
          },
          "MiddleName": {
            "type": "string",
            "example": "Alexandrovich",
            "nullable": true
          },
          "Rate": {
            "type": "number"
          },
          "IsActive": {
            "type": "boolean"
          },
          "Image": {
            "$ref": "#/components/schemas/ImageInfo"
          },
          "Position": {
            "$ref": "#/components/schemas/PositionInfo"
          }
        }
      },
      "ProjectInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string"
          },
          "ShortName": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "ShortDescription": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          }
        }
      },
      "PositionInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "description": "Specific position id.",
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "description": "Position name.",
            "type": "string",
            "example": "IT projects consultant"
          },
          "Description": {
            "description": "Position description.",
            "type": "string",
            "example": "Responsibilities include the following. Communication with clients, analysis of client needs, setting a developer's task, control of execution, testing, delivery of the result to the client. Maintaining project documentation, both with the client and internal. Keeping statistics and analysis, searching for customers for integration in the supplier base. Document management (contracts, accounts, acts).",
            "nullable": true
          },
          "IsActive": {
            "description": "Marks whether position is active or not.",
            "type": "boolean",
            "example": true
          }
        }
      },
      "ImageInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "ParentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Type": {
            "type": "string"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Content": {
            "type": "string",
            "format": "byte"
          },
          "Extension": {
            "type": "string"
          }
        }
      },
      "CreateDepartmentRequest": {
        "type": "object",
        "required": [
          "Name"
        ],
        "properties": {
          "Name": {
            "description": "Department name.",
            "type": "string"
          },
          "Description": {
            "description": "Department description.",
            "type": "string",
            "nullable": true
          },
          "DirectorUserId": {
            "description": "Specific director user id this department.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Users": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "EditDepartmentRequest": {
        "type": "array",
        "minItems": 1,
        "example": [
          {
            "op": "replace",
            "path": "/name",
            "value": {
              "description": "New department name",
              "type": "string",
              "example": "deparment"
            }
          }
        ],
        "items": {
          "$ref": "#/components/schemas/PatchDepartmentDocument"
        }
      },
      "AddDepartmentUsersRequest": {
        "type": "object",
        "description": "Specific department users data.",
        "required": [
          "DeprtmentId",
          "UsersIds"
        ],
        "properties": {
          "DeprtmentId": {
            "description": "Specific department identifier.",
            "type": "string",
            "format": "uuid"
          },
          "Users": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "OperationResultResponse": {
        "description": "Response object for action operations.",
        "type": "object",
        "properties": {
          "Body": {
            "type": "object",
            "nullable": true
          },
          "Status": {
            "$ref": "#/components/schemas/OperationResultStatusType"
          },
          "Errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OperationResultResponseDepartmentInfo": {
        "type": "object",
        "properties": {
          "Body": {
            "type": "object",
            "description": "Full departmant information.",
            "properties": {
              "department": {
                "type": "object",
                "$ref": "#/components/schemas/DepartmentInfo"
              },
              "users": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DepartmentUserInfo"
                }
              },
              "projects": {
                "type": "object",
                "$ref": "#/components/schemas/ProjectInfo"
              }
            }
          },
          "Status": {
            "$ref": "#/components/schemas/OperationResultStatusType"
          },
          "Errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FindResultResponseDepartmentInfo": {
        "type": "object",
        "properties": {
          "Status": {
            "$ref": "#/components/schemas/OperationResultStatusType"
          },
          "TotalCount": {
            "type": "integer"
          },
          "Body": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepartmentInfo"
            }
          },
          "Errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OperationResultStatusType": {
        "type": "string",
        "description": "Operation complition result status.",
        "enum": [
          "FullSuccess",
          "PartialSuccess",
          "Failed"
        ],
        "example": "FullSuccess",
        "default": "FullSuccess"
      },
      "PatchDepartmentDocument": {
        "type": "object",
        "required": [
          "op",
          "path",
          "value"
        ],
        "properties": {
          "op": {
            "type": "string",
            "description": "The operation to be performed.",
            "enum": [
              "replace"
            ]
          },
          "path": {
            "type": "string",
            "description": "A JSON-Pointer.",
            "enum": [
              "/name",
              "/description",
              "/isactive",
              "/directorid"
            ]
          },
          "value": {
            "type": "object",
            "description": "The value to be used within the operations."
          }
        }
      }
    },
    "parameters": {
      "securityToken": {
        "name": "token",
        "in": "header",
        "description": "The JWT token.",
        "schema": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ"
        },
        "required": true
      }
    }
  }
}
