{
  "openapi": "3.0.0",
  "info": {
    "version": "1.2.4",
    "title": "UserService",
    "description": "UserService is an API that intended to work with users."
  },
  "servers": [
    {
      "url": "https://user.ltdo.xyz"
    }
  ],
  "paths": {
    "/users/get": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        },
        {
          "name": "userId",
          "in": "query",
          "description": "User global unique identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": false
        },
        {
          "name": "name",
          "in": "query",
          "description": "User first or last name.",
          "schema": {
            "type": "string"
          },
          "required": false
        },
        {
          "name": "email",
          "in": "query",
          "description": "Any of user emails. Can not be used with `includecommunications`.",
          "schema": {
            "type": "string"
          },
          "required": false
        },
        {
          "name": "includecommunications",
          "in": "query",
          "description": "Include user communications info in answer.",
          "schema": {
            "type": "boolean"
          },
          "required": false
        },
        {
          "name": "includecertificates",
          "in": "query",
          "description": "Include user certificates info in answer.",
          "schema": {
            "type": "boolean"
          },
          "required": false
        },
        {
          "name": "includeachievements",
          "in": "query",
          "description": "Include user achievements info in answer.",
          "schema": {
            "type": "boolean"
          },
          "required": false
        },
        {
          "name": "includedepartment",
          "in": "query",
          "description": "Include user department info in answer.",
          "schema": {
            "type": "boolean"
          },
          "required": false
        },
        {
          "name": "includeposition",
          "in": "query",
          "description": "Include user position info in answer.",
          "schema": {
            "type": "boolean"
          },
          "required": false
        },
        {
          "name": "includeskills",
          "in": "query",
          "description": "Include user skills info in answer.",
          "schema": {
            "type": "boolean"
          },
          "required": false
        },
        {
          "name": "includeprojects",
          "in": "query",
          "description": "Include user projects info in answer.",
          "schema": {
            "type": "boolean"
          },
          "required": false
        },
        {
          "name": "includeimages",
          "in": "query",
          "description": "Include images content in answer.",
          "schema": {
            "type": "boolean"
          },
          "required": false
        }
      ],
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "getUser",
        "description": "Returns user information.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/find": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        },
        {
          "name": "skipCount",
          "in": "query",
          "description": "Number of pages to skip.",
          "schema": {
            "type": "integer"
          },
          "required": true
        },
        {
          "name": "takeCount",
          "in": "query",
          "description": "Number of users on one page.",
          "schema": {
            "type": "integer"
          },
          "required": true
        }
      ],
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "findUsers",
        "description": "Returns all users information with pagination.",
        "responses": {
          "200": {
            "description": "Successfully returned list of users information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/create": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        }
      ],
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "createUser",
        "description": "The method attempts to add the user. The user must have right - Add/Edit/Remove users.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created user Id (uuid) will be in response Body property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/edit": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        },
        {
          "name": "userId",
          "in": "query",
          "description": "Specific user id",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": true
        }
      ],
      "patch": {
        "tags": [
          "User"
        ],
        "operationId": "editUser",
        "description": "Update user properties. The user must have right - Add/Edit/Remove users.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "minItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PatchOperation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update user operation success (boolean) status will be in response Body property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/disable": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        },
        {
          "name": "userId",
          "in": "query",
          "description": "User global unique identifier.",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "required": true
        }
      ],
      "delete": {
        "tags": [
          "User"
        ],
        "operationId": "disableUser",
        "description": "Delete the specified user by id. The user must have right - Add/Edit/Remove users.",
        "responses": {
          "204": {
            "description": "Disable user operation success (boolean) status will be in response Body property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/credentials/create": {
      "post": {
        "tags": [
          "Credentials"
        ],
        "operationId": "createCredentials",
        "description": "This endpoint must be used only for user first time login operation.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCredentialsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "test",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/password/generate": {
      "parameters": [
        {
          "$ref": "#/components/parameters/securityToken"
        }
      ],
      "get": {
        "tags": [
          "Credentials"
        ],
        "operationId": "generatePassword",
        "description": "Returns randomly generated password.",
        "responses": {
          "200": {
            "description": "Successfully returned password string.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "8-12 symbols password string.",
                  "type": "string",
                  "example": "!31TKgk_"
                }
              }
            }
          }
        }
      }
    },
    "/password/change": {
      "post": {
        "tags": [
          "Credentials"
        ],
        "operationId": "changePassword",
        "description": "Change user password.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "items": {
                  "$ref": "#/components/schemas/ChangePasswordRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Change user password operation success (boolean) status will be in response Body property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/password/forgot": {
      "parameters": [
        {
          "name": "userEmail",
          "in": "query",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Credentials"
        ],
        "operationId": "forgotPassword",
        "description": "Initiates sending a email with instructions on how to change the user's password.",
        "responses": {
          "200": {
            "description": "Send email operation success (boolean) status will be in response Body property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateUserRequest": {
        "type": "object",
        "required": [
          "FirstName",
          "LastName",
          "Password",
          "Status",
          "StartWorkingAt",
          "Communications",
          "Rate"
        ],
        "properties": {
          "FirstName": {
            "description": "First name of a user.",
            "type": "string",
            "example": "Ivan"
          },
          "LastName": {
            "description": "Last name of a user.",
            "type": "string",
            "example": "Ivanov"
          },
          "MiddleName": {
            "description": "Last name of a user.",
            "type": "string",
            "example": "Ivanovich",
            "nullable": true
          },
          "StartWorkingAt": {
            "description": "Time when the user started working for the company.",
            "type": "string",
            "example": "2021-01-21T00:00:00.000Z",
            "format": "date"
          },
          "Rate": {
            "description": "User rate",
            "type": "number",
            "example": 0.25,
            "format": "float"
          },
          "Status": {
            "$ref": "#/components/schemas/UserStatus"
          },
          "Password": {
            "description": "User password.",
            "type": "string",
            "example": "MySecretPassword123!"
          },
          "IsAdmin": {
            "description": "Mark whether the user is an administrator.",
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "AvatarImage": {
            "description": "Avatar image file content encoded in base64 string.",
            "type": "string",
            "format": "base64",
            "nullable": true
          },
          "PositionId": {
            "description": "User position ID.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "DepartmentId": {
            "description": "User department ID.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Communications": {
            "description": "Minimum one communication with type Email must be added.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommunicationInfo"
            }
          }
        }
      },
      "CreateCredentialsRequest": {
        "type": "object",
        "required": [
          "UserId",
          "Login",
          "Password"
        ],
        "properties": {
          "UserId": {
            "type": "string",
            "format": "uuid"
          },
          "Login": {
            "type": "string"
          },
          "Password": {
            "type": "string"
          }
        }
      },
      "PatchOperation": {
        "type": "object",
        "required": [
          "op",
          "path"
        ],
        "properties": {
          "op": {
            "type": "string",
            "description": "The operation to be performed.",
            "enum": [
              "add",
              "remove",
              "replace"
            ]
          },
          "path": {
            "type": "string",
            "description": "A JSON-Pointer.",
            "enum": [
              "/FirstName",
              "/LastName",
              "/MiddleName",
              "/AvatarImage",
              "/Status",
              "/Certificates",
              "/Rate"
            ]

          },
          "value": {
            "type": "object",
            "description": "The value to be used within the operations."
          }
        }
      },
      "CredentialsResponse": {
        "type": "object",
        "properties": {
          "UserId": {
            "type": "string",
            "format": "uuid"
          },
          "Token": {
            "type": "string"
          }
        }
      },
      "UsersResponse": {
        "type": "object",
        "properties": {
          "Count": {
            "type": "integer",
            "description": "Total number of all users."
          },
          "Users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserInfo"
            }
          },
          "Errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "User": {
            "$ref": "#/components/schemas/UserInfo"
          },
          "Avatar": {
            "$ref": "#/components/schemas/ImageInfo"
          },
          "Department": {
            "$ref": "#/components/schemas/DepartmentInfo"
          },
          "Position": {
            "$ref": "#/components/schemas/PositionInfo"
          },
          "Communications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommunicationInfo"
            }
          },
          "Certificates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CertificateInfo"
            }
          },
          "Achievements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserAchievementInfo"
            }
          },
          "Projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectInfo"
            }
          },
          "Skills": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "Errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ImageInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "ParentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Content": {
            "type": "string",
            "nullable": true,
            "description": "Image file content in base64 encoded string."
          }
        }
      },
      "UserInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "MiddleName": {
            "type": "string"
          },
          "Status": {
            "$ref": "#/components/schemas/UserStatus"
          },
          "IsAdmin": {
            "type": "boolean"
          },
          "About": {
            "type": "string"
          },
          "StartWorkingAt": {
            "type": "string"
          },
          "Rate": {
            "type": "number"
          }
        }
      },
      "DepartmentInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string"
          },
          "StartWorkingAt": {
            "type": "string"
          }
        }
      },
      "PositionInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string"
          },
          "ReceivedAt": {
            "type": "string"
          }
        }
      },
      "CommunicationInfo": {
        "type": "object",
        "properties": {
          "Type": {
            "$ref": "#/components/schemas/CommunicationType"
          },
          "Value": {
            "type": "string"
          }
        }
      },
      "CertificateInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string"
          },
          "SchoolName": {
            "type": "string"
          },
          "EducationType": {
            "$ref": "#/components/schemas/EducationType"
          },
          "ReceivedAt": {
            "type": "string"
          },
          "Image": {
            "$ref": "#/components/schemas/ImageInfo"
          }
        }
      },
      "UserAchievementInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "AchievementId": {
            "description": "Base achievement ID.",
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string"
          },
          "ReceivedAt": {
            "type": "string"
          },
          "Image": {
            "$ref": "#/components/schemas/ImageInfo"
          }
        }
      },
      "ProjectInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string"
          },
          "IsActive": {
            "type": "boolean"
          }
        }
      },
      "ChangePasswordRequest": {
        "type": "object",
        "properties": {
          "UserId": {
            "type": "string",
            "format": "uuid"
          },
          "Secret": {
            "type": "string"
          },
          "Login": {
            "type": "string"
          },
          "NewPassword": {
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "description": "Error information",
        "type": "object",
        "properties": {
          "UtcTime": {
            "type": "string"
          },
          "Header": {
            "type": "string"
          },
          "Message": {
            "description": "A human readable message providing more details about the error.",
            "type": "string"
          }
        }
      },
      "OperationResultResponse": {
        "description": "Response object for action operations.",
        "type": "object",
        "properties": {
          "Body": {
            "type": "object"
          },
          "Status": {
            "$ref": "#/components/schemas/OperationResultStatusType"
          },
          "Errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CommunicationType": {
        "type": "string",
        "description": "Communication type.",
        "enum": [
          "Skype",
          "Phone",
          "Email",
          "Telegram",
          "Twitter"
        ],
        "example": "Email"
      },
      "EducationType": {
        "type": "string",
        "description": "Education format.",
        "enum": [
          "Online",
          "Offline"
        ]
      },
      "UserStatus": {
        "type": "string",
        "description": "Mode for user status.",
        "enum": [
          "Vacation",
          "Sick",
          "WorkFromOffice",
          "WorkFromHome"
        ],
        "example": "Sick",
        "default": "WorkFromHome"
      },
      "OperationResultStatusType": {
        "type": "string",
        "description": "Operation complition result status.",
        "enum": [
          "FullSuccess",
          "PartialSuccess",
          "Failed"
        ],
        "example": "FullSuccess",
        "default": "FullSuccess"
      }
    },
    "parameters": {
      "securityToken": {
        "name": "token",
        "in": "header",
        "description": "The JWT token.",
        "schema": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkw"
        },
        "required": true
      }
    }
  }
}
