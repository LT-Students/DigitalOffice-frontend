{
  "openapi": "3.0.0",
  "info": {
    "version": "1.6.5.0",
    "title": "CompanyService",
    "description": "CompanyService is an API that intended to work with positions and departments."
  },
  "servers": [
    {
      "url": "https://company.ltdo.xyz",
      "description": "Production server"
    },
    {
      "url": "https://company.dev.ltdo.xyz",
      "description": "Development server"
    }
  ],
  "paths": {
    "/company": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/securityToken"
          }
        ],
        "tags": [
          "Company"
        ],
        "operationId": "createCompany",
        "description": "Adds a new company.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Guid of the created company will be in response Body property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/company/{companyId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/securityToken"
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Unique company identifier.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "name": "includeoffices",
            "in": "query",
            "description": "Include offices info in answer.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "tags": [
          "Company"
        ],
        "operationId": "getCompany",
        "responses": {
          "200": {
            "description": "Successfully returned a company.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponseCompanyResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/securityToken"
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "Unique company identifier.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Company"
        ],
        "operationId": "editCompany",
        "description": "update Company properties.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditCompanyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/companyuser/{userId}": {
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/securityToken"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Unique user identifier.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "CompanyUser"
        ],
        "operationId": "editCompanyUser",
        "description": "Chage company user information.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditCompanyUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success of operation will be in response Body property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contractsubject": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/securityToken"
          },
          {
            "name": "skipCount",
            "in": "query",
            "description": "Number of entries to skip.",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "takeCount",
            "in": "query",
            "description": "Number of contract subjects to take.",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "isactive",
            "in": "query",
            "description": "Get only active or not active contract subjects.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "tags": [
          "ContractSubject"
        ],
        "operationId": "findContractSubjects",
        "description": "Returns all contract subject information with pagination.",
        "responses": {
          "200": {
            "description": "Ok.\n* Successfully returned list of contract subject information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindResultResponseContractSubjectInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindResultResponseContractSubjectInfo"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      },
      "post":{
        "parameters": [
          {
            "$ref": "#/components/parameters/securityToken"
          }
        ],
        "tags": [
          "ContractSubject"
        ],
        "operationId": "createContractSubject",
        "description": "Adds a new contract subject.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContractSubjectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Guid of the created contract subject will be in response Body property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contractsubject/{contractsubjectId}": {
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/securityToken"
          },
          {
            "name": "contractsubjectId",
            "in": "path",
            "description": "Unique contract subject identifier.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "ContractSubject"
        ],
        "operationId": "editContractSubject",
        "description": "Chage contract subject's name, description, or active status.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditContractSubjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success of operation will be in response Body property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateCompanyRequest": {
        "type": "object",
        "required": [
          "Name"
        ],
        "properties": {
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Contacts": {
            "type": "string"
          },
          "Tagline": {
            "type": "string"
          },
          "Logo": {
            "$ref": "#/components/schemas/ImageConsist"
          }
        }
      },
      "CreateContractSubjectRequest": {
        "type": "object",
        "required": [
          "Name"
        ],
        "properties": {
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          }
        }
      },
      "ImageConsist": {
        "type": "object",
        "required": [
          "Content",
          "Extension"
        ],
        "properties": {
          "Content": {
            "type": "string",
            "nullable": false,
            "description": "Image file content in base64 encoded string."
          },
          "Extension": {
            "type": "string",
            "nullable": false
          }
        }
      },
      "ContractTerm": {
        "type": "string",
        "description": "Contract term type.",
        "enum":[
          "FixedTerm",
          "Perpetual"
        ],
        "example": "FixedTerm"
      },
      "CompanyResponse": {
        "type": "object",
        "required": [
          "Id",
          "Name"
        ],
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Tagline": {
            "type": "string",
            "nullable": true
          },
          "Contacts": {
            "type": "string",
            "nullable": true
          },
          "Logo": {
            "$ref": "#/components/schemas/ImageConsist",
            "nullable": true
          },
          "Offices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfficeInfo"
            },
            "nullable": true
          }
        }
      },
      "OfficeInfo": {
        "type": "object",
        "required": [
          "Id",
          "City",
          "Address"
        ],
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid",
            "nullable": false
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "City": {
            "type": "string"
          },
          "Address": {
            "type": "string"
          },
          "Longitude": {
            "type": "number",
            "nullable": true
          },
          "Latitude": {
            "type": "number",
            "nullable": true
          }
        }
      },
      "ImageInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "ParentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "Type": {
            "type": "string"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Content": {
            "type": "string",
            "format": "byte"
          },
          "Extension": {
            "type": "string"
          }
        }
      },
      "ContractSubjectInfo": {
        "type": "object",
        "required": [
          "Id",
          "Name",
          "IsActive"
        ],
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid",
            "nullable": false
          },
          "Name": {
            "type": "string",
            "nullable": false
          },
          "IsActive": {
            "type": "boolean",
            "nullable": false
          }
        }
      },
      "ErrorResponse": {
        "description": "Error information",
        "type": "object",
        "properties": {
          "UtcTime": {
            "type": "string"
          },
          "Header": {
            "type": "string"
          },
          "Message": {
            "description": "A human readable message providing more details about the error.",
            "type": "string"
          }
        }
      },
      "OperationResultStatusType": {
        "type": "string",
        "description": "Operation complition result status.",
        "enum": [
          "FullSuccess",
          "PartialSuccess",
          "Failed"
        ],
        "example": "FullSuccess",
        "default": "FullSuccess"
      },
      "OperationResultResponse": {
        "description": "Response object for action operations.",
        "type": "object",
        "properties": {
          "Body": {
            "type": "object",
            "nullable": true
          },
          "Status": {
            "$ref": "#/components/schemas/OperationResultStatusType"
          },
          "Errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OperationResultResponseCompanyResponse": {
        "type": "object",
        "properties": {
          "Body": {
            "$ref": "#/components/schemas/CompanyResponse"
          },
          "Status": {
            "$ref": "#/components/schemas/OperationResultStatusType"
          },
          "Errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FindResultResponseContractSubjectInfo": {
        "description": "Response object for action operations.",
        "type": "object",
        "properties": {
          "Body": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractSubjectInfo"
            }
          },
          "TotalCount": {
            "type": "number"
          },
          "Status": {
            "$ref": "#/components/schemas/OperationResultStatusType"
          },
          "Errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }

      },
      "PatchCompanyDocument": {
        "type": "object",
        "required": [
          "op",
          "path"
        ],
        "properties": {
          "op": {
            "type": "string",
            "description": "The operation to be performed.",
            "enum": [
              "replace"
            ]
          },
          "path": {
            "type": "string",
            "description": "A JSON-Pointer.",
            "enum": [
              "/name",
              "/tagline",
              "/description",
              "/logo",
              "/contacts"
            ]
          },
          "value": {
            "type": "object",
            "description": "The value to be used within the operations."
          }
        }
      },
      "PatchContractSubjectDocument": {
        "type": "object",
        "required": [
          "op",
          "path"
        ],
        "properties": {
          "op": {
            "type": "string",
            "description": "The operation to be performed.",
            "enum": [
              "replace"
            ]
          },
          "path": {
            "type": "string",
            "description": "A JSON-Pointer.",
            "enum": [
              "/name",
              "/description",
              "/isactive"
            ]
          },
          "value": {
            "type": "object",
            "description": "The value to be used within the operations."
          }
        }
      },
      "PatchCompanyUserDocument": {
        "type": "object",
        "required": [
          "op",
          "path"
        ],
        "properties": {
          "op": {
            "type": "string",
            "description": "The operation to be performed.",
            "enum": [
              "replace"
            ]
          },
          "path": {
            "type": "string",
            "description": "A JSON-Pointer.",
            "enum": [
              "/contracttermtype",
              "/contractsubjectid",
              "/rate",
              "/startworkingat",
              "/endworkingat",
              "/probation"
            ]
          },
          "value": {
            "type": "object",
            "description": "The value to be used within the operations."
          }
        }
      },
      "EditCompanyRequest": {
        "type": "array",
        "minItems": 1,
        "example": [
          {
            "op": "replace",
            "path": "/name",
            "value": {
              "description": "New company name",
              "type": "string",
              "example": "My Company"
            }
          }
        ],
        "items": {
          "$ref": "#/components/schemas/PatchCompanyDocument"
        }
      },
      "EditContractSubjectRequest": {
        "type": "array",
        "minItems": 1,
        "example": [
          {
            "op": "replace",
            "path": "/name",
            "value": {
              "description": "New contract subject's name",
              "type": "string",
              "example": "Employment contract"
            }
          }
        ],
        "items": {
          "$ref": "#/components/schemas/PatchContractSubjectDocument"
        }
      },
      "EditCompanyUserRequest": {
        "type": "array",
        "minItems": 1,
        "example": [
          {
            "op": "replace",
            "path": "/startworkingat",
            "value": {
              "description": "New portal name",
              "type": "string",
              "format": "date",
              "example": "2021-01-21T00:00:00.000Z",
              "nullable": false
            }
          }
        ],
        "items": {
          "$ref": "#/components/schemas/PatchCompanyUserDocument"
        }
      }
    },
    "parameters": {
      "securityToken": {
        "name": "token",
        "in": "header",
        "description": "The JWT token.",
        "schema": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ"
        },
        "required": true
      }
    }
  }
}
